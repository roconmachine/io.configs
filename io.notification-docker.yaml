server:
  port: 8088
spring:
  r2dbc:
    url: r2dbc:postgresql://192.168.0.138:5432/IO_NOTIFICATION_DB
    username: postgres
    password: postgres
    properties:
      logging.level: DEBUG

  flyway:
    enabled: true
    url: jdbc:postgresql://192.168.0.138:5432/IO_NOTIFICATION_DB
    user: postgres
    password: postgres
    locations: classpath:db/migration
#  cloud:
#    stream:
#      binding:
#        input: ${service.notification-kafka}
#        content-type: application/*+avro

  kafka:
    producer:
      bootstrap-servers: 192.168.0.138:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://192.168.0.138:8088
#        spring.json.type.mapping: kafkaRequestMessage:com.roconmachine.io.notification.kafka.NotificationProducerMessage
      acks: all
      enable.idempotence: true
      min.insync.replicas: 2
      retries: 2
      delivery.timeout.ms: 120000
      max.in.flight.requests.per.connection: 5

service:
  name: io.notification
  apiversion: v1.0
  notification-kafka: "email-topic"

logging:
  level:
    org.springframework.r2dbc: DEBUG
    org.springframework.kafka: DEBUG
    org.apache.kafka: DEBUG

profile:
  name: docker